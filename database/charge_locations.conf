    location / {
		set $cors "true";
		if ($request_method = 'OPTIONS') {
			set $cors "${cors}options";  
		}

		# non-OPTIONS indicates a normal CORS request
		if ($request_method = 'GET') {
			set $cors "${cors}get";  
		}
		if ($request_method = 'POST') {
			set $cors "${cors}post";
		}

		if ($cors = "trueget") {
			add_header 'Access-Control-Allow-Origin' "$http_origin";
			add_header 'Access-Control-Allow-Credentials' 'true';
		}

		if ($cors = "truepost") {
			add_header 'Access-Control-Allow-Origin' "$http_origin";
			add_header 'Access-Control-Allow-Credentials' 'true';
		}

		# if it's OPTIONS, then it's a CORS preflight request so respond immediately with no response body
		if ($cors = "trueoptions") {
			add_header 'Access-Control-Allow-Origin' "$http_origin";
			# in a preflight response, tells browser the subsequent actual request can include user credentials (e.g., cookies)
			add_header 'Access-Control-Allow-Credentials' 'true';

			# Tell browser to cache this pre-flight info for 20 days
			add_header 'Access-Control-Max-Age' 1728000;

			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			
			add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';

			add_header 'Content-Length' 0;
			return 204;
		}

       index index.php index.html;

       include tff-redirects.conf;
       include bot-blocker.conf;
    }

    # Prevent nginx from serving dotfiles (.htaccess, .svn, .git, etc.)
    location ~ /\. {
        deny all;
    }

    # Hide Yii files:
    location ~ ^/(protected|framework|themes/\w+/views) {
        deny all;
    }

    include php-fpm-location.conf;

    # Uncomment for maintenance:
    # include maintenance.conf;


