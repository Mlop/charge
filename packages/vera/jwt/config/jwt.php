<?php
return [
    /*
     * 使用步骤：
     * 1. 在一级目录下composer.json中autoload的psr-4中加入"Vera\\JWT\\": "packages/vera/jwt/src"然后执行composer dump-autoload载入扩展目录
     * 2. boostrap/app.php中注册服务提供者，$app->register(Vera\JWT\Provider\LumenServiceProvider::class);
     * 3.
     * 测试，在routes.php中加
     * $app->get('/', function () use ($app) {
     * return config('jwt');
     * });
     */
    /*
    |------------------------------------------------------------------
    | JWT 认证秘钥
    |------------------------------------------------------------------
    |
    | JWT 认证秘钥是用来为token签名的,必须在.env文件中设置。
    |
    */
    'secret_key' => env('JWT_SECRET_KEY'),
    /*
    |------------------------------------------------------------------
    | Token 有效期
    |------------------------------------------------------------------
    |
    | 指定token的有效时间(单位分钟),默认1小时。
    |
    */
    'ttl' => env('JWT_TTL', 60),
    /*
    |------------------------------------------------------------------
    | Token 刷新有效期
    |------------------------------------------------------------------
    |
    | 指定token过期后,多长一段时间内,使用过期的token能够刷新。默认为3周
    |
    */
    'refresh_ttl' => env('JWT_REFRESH_TTL', 30240),
    /*
    |------------------------------------------------------------------
    | JWT 哈希算法
    |------------------------------------------------------------------
    |
    | 为Token HMAC签名算法
    | 对称算法:
    | HS256, HS384, HS512
    | 非对称算法:暂不考虑
    */
    'algorithm' => env('JWT_ALGORITHM', 'HS256'),
];
